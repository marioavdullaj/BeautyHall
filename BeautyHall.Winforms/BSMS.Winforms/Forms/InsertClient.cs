using BSMS.Winforms.GenericUtils;
using DevExpress.XtraBars;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using BeautyHall.Api.SDK.Responses;
using Demo;
using BSMS.Winforms.Models;
using DevExpress.Utils.Extensions;
using Demo.UserControls;
using BeautyHall.Api.SDK.Requests;
using DevExpress.XtraEditors;
using BSMS.Winforms.UserControls;

namespace BSMS.Winforms.Forms
{
    public partial class InsertClient : FixedRibbonForm
    {
        private IEnumerable<Subject>? subjects;


        public InsertClient()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            gridControl1.DataSource = new System.ComponentModel.BindingList<BSMS.Winforms.Models.Customer>() /* TODO: Assign the real data here.*/;
        }

        private void EnableClientButtons(bool enable)
        {
            ClientHeaderPanel.Enabled = enable;
            SaveClientButton.Enabled = enable;
            CancelClientButton.Enabled = enable;
            EditClientButton.Enabled = enable;
        }
        private async void InsertClient_Load(object sender, EventArgs e)
        {
            EnableClientButtons(false);
            try
            {
                dateEdit1.DateTime = DateTime.Now;
                await LoadSubjects();
            }
            catch (Exception ex)
            {
                XtraMessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private async Task LoadSubjects()
        {
            try
            {
                subjects = await Program.ApiSdk.GetSubjects();
                if (subjects != null)
                {
                    var clients = subjects.Where(x => x.SubjectType == 0).Select(x => new Customer
                    {
                        Id = x.SubjectId,
                        Surname = x.SubjectLastName,
                        Name = x.SubjectName,
                        Tel = x.PhoneNumber,
                        Email = x.Email
                    });

                    gridControl1.DataSource = clients;
                }
            }
            catch (Exception ex)
            {
                XtraMessageBox.Show(ex.Message);
            }
        }

        private void barButtonItem1_ItemClick(object sender, ItemClickEventArgs e)
        {
            EnableClientButtons(true);
        }

        private async Task<bool> InsertNewClient()
        {
            try
            {
                var input = new List<SubjectDto>
                {
                    new SubjectDto
                    {
                        SubjectLastName = textEdit1.Text,
                        SubjectName = textEdit3.Text,
                        PhoneNumber = textEdit4.Text,
                        EMail = textEdit5.Text,
                        RegistrationDate = dateEdit1.DateTime
                    }
                };
                bool result = await Program.ApiSdk.UpsertSubjects(input);

                if (result)
                {
                    XtraMessageBox.Show("New customer is register!", "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return true;
                }
                else
                {
                    XtraMessageBox.Show("Error durig registration.", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
            catch (Exception ex)
            {
                XtraMessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            return false;
        }


        private async void SaveClientButton_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (await InsertNewClient())
            {
                // Clear all the user controls and disable
                Clear();
                EnableClientButtons(false);
                await LoadSubjects();
            }
        }

        private void Clear()
        {
            textEdit1.Text = "";
            textEdit2.Text = "";
            textEdit3.Text = "";
            textEdit4.Text = "";
            textEdit5.Text = "";
            dateEdit1.DateTime = DateTime.Now;
        }

        private void gridView1_RowClick(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {
            // here when we select a row we autocompile the data in the above panel
        }
    }
}